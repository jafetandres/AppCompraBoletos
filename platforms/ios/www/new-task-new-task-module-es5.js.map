{"version":3,"sources":["./src/app/new-task/new-task.page.html","./src/app/new-task/new-task.module.ts","./src/app/new-task/new-task.page.scss","./src/app/new-task/new-task.page.ts"],"names":[],"mappings":"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","file":"new-task-new-task-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>New Task</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding>\\n    <div>\\n      <ion-row no-padding>\\n        <ion-col size=\\\"6\\\" offset=\\\"3\\\">\\n          <img [src]=\\\"image\\\" alt=\\\"this is the image\\\"/>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row no-padding>\\n        <ion-col size=\\\"6\\\" offset=\\\"3\\\">\\n          <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" size=\\\"small\\\" (click)=\\\"openImagePicker()\\\">Change Picture</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </div>\\n    <form [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"onSubmit(validations_form.value)\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Title</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"title\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Description</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"description\\\"></ion-input>\\n      </ion-item>\\n      <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Create</ion-button>\\n    </form>\\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule, Location } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { NewTaskPage } from './new-task.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewTaskPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [Location],\n  declarations: [NewTaskPage]\n})\nexport class NewTaskPageModule {}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy10YXNrL25ldy10YXNrLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from 'src/services/firebase.service';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ImagePicker } from '@ionic-native/image-picker/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\n\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.page.html',\n  styleUrls: ['./new-task.page.scss'],\n})\nexport class NewTaskPage implements OnInit {\n\n  validations_form: FormGroup;\n  image: any;\n\n  constructor(\n    private imagePicker: ImagePicker,\n    public toastCtrl: ToastController,\n    public loadingCtrl: LoadingController,\n    public router: Router,\n    private formBuilder: FormBuilder,\n    private firebaseService: FirebaseService,\n    private webview: WebView\n  ) { }\n\n  ngOnInit() {\n    this.resetFields();\n  }\n\n  resetFields(){\n    this.image = \"../assets/imgs/default_image.jpg\";\n    this.validations_form = this.formBuilder.group({\n      title: new FormControl('', Validators.required),\n      description: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(value){\n    let data = {\n      title: value.title,\n      description: value.description,\n      image: this.image\n    }\n    this.firebaseService.createTask(data)\n    .then(\n      res => {\n        this.router.navigate([\"/home\"]);\n      }\n    )\n  }\n\n  openImagePicker(){\n    this.imagePicker.hasReadPermission()\n    .then((result) => {\n      if(result == false){\n        // no callbacks required as this opens a popup which returns async\n        this.imagePicker.requestReadPermission();\n      }\n      else if(result == true){\n        this.imagePicker.getPictures({\n          maximumImagesCount: 1\n        }).then(\n          (results) => {\n            for (var i = 0; i < results.length; i++) {\n              this.uploadImageToFirebase(results[i]);\n            }\n          }, (err) => console.log(err)\n        );\n      }\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  async uploadImageToFirebase(image){\n    const loading = await this.loadingCtrl.create({\n      message: 'Please wait...'\n    });\n    const toast = await this.toastCtrl.create({\n      message: 'Image was updated successfully',\n      duration: 3000\n    });\n    this.presentLoading(loading);\n    let image_src = this.webview.convertFileSrc(image);\n    let randomId = Math.random().toString(36).substr(2, 5);\n\n    //uploads img to firebase storage\n    this.firebaseService.uploadImage(image_src, randomId)\n    .then(photoURL => {\n      this.image = photoURL;\n      loading.dismiss();\n      toast.present();\n    }, err =>{\n      console.log(err);\n    })\n  }\n\n  async presentLoading(loading) {\n    return await loading.present();\n  }\n\n}"],"sourceRoot":""}