{"version":3,"sources":["./src/app/actualizar-provincia/actualizar-provincia.page.html","./src/app/actualizar-provincia/actualizar-provincia.module.ts","./src/app/actualizar-provincia/actualizar-provincia.page.scss","./src/app/actualizar-provincia/actualizar-provincia.page.ts","./src/app/actualizar-provincia/actualizar-provincia.resolver.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ioC;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AAEO;AAET;AAGqB;AACI;AACQ;AAG9E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kFAAuB;QAClC,OAAO,EAAE;YACP,IAAI,EAAE,0FAA2B;SAClC;KACF;CACF,CAAC;AAaF;IAAA;IAA4C,CAAC;IAAhC,6BAA6B;QAXzC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,kFAAuB,CAAC;YACvC,SAAS,EAAC,CAAC,0FAA2B,CAAC;SACxC,CAAC;OACW,6BAA6B,CAAG;IAAD,oCAAC;CAAA;AAAH;;;;;;;;;;;;AClC1C,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACiB;AACI;AAC3B;AACD;AACE;AAO3D;IAME,iCACS,SAA0B,EAC1B,WAA8B,EAC7B,WAAwB,EACxB,eAAgC,EAChC,OAAgB,EAChB,SAA0B,EAC1B,KAAqB,EACrB,MAAc,EACf,GAAqB;QARrB,cAAS,GAAT,SAAS,CAAiB;QAC1B,gBAAW,GAAX,WAAW,CAAmB;QAC7B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,YAAO,GAAP,OAAO,CAAS;QAChB,cAAS,GAAT,SAAS,CAAiB;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,QAAG,GAAH,GAAG,CAAkB;QAX9B,SAAI,GAAY,KAAK,CAAC;IAYlB,CAAC;IAEL,0CAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IAEjB,CAAC;IAED,yCAAO,GAAP;QAAA,iBAcC;QAbC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAS;YACjC,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAE7B,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;aAGlB;QACH,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,WAAW,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzE,CAAC,CAAC;IACL,CAAC;IAMD,0CAAQ,GAAR,UAAS,KAAK;QAAd,iBAYC;QAXC,IAAI,IAAI,GAAG;YAET,WAAW,EAAE,KAAK,CAAC,WAAW;SAE/B;QACD,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;aACzD,IAAI,CACH,aAAG;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,CACF;IACL,CAAC;IAEK,wCAAM,GAAZ;;;;;;4BACgB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,MAAM,EAAE,WAAW;4BACnB,OAAO,EAAE,6BAA6B,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG;4BACpE,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,IAAI;oCACV,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE,cAAQ,CAAC;iCACnB;gCACD;oCACE,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE;wCACP,KAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC;6CACjD,IAAI,CACH,aAAG;4CACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;wCACvC,CAAC,EACD,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CACxB;oCACL,CAAC;iCACF;6BACF;yBACF,CAAC;;wBAvBI,KAAK,GAAG,SAuBZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAGK,gDAAc,GAApB,UAAqB,OAAO;;;;4BACnB,qBAAM,OAAO,CAAC,OAAO,EAAE;4BAA9B,sBAAO,SAAuB,EAAC;;;;KAChC;;gBAjFmB,8DAAe;gBACb,gEAAiB;gBAChB,0DAAW;gBACP,6EAAe;gBACvB,uEAAO;gBACL,8DAAe;gBACnB,8DAAc;gBACb,sDAAM;gBACV,wEAAgB;;IAfnB,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,oLAA+C;;SAEhD,CAAC;+EAQoB,8DAAe;YACb,gEAAiB;YAChB,0DAAW;YACP,6EAAe;YACvB,uEAAO;YACL,8DAAe;YACnB,8DAAc;YACb,sDAAM;YACV,wEAAgB;OAfnB,uBAAuB,CA0FnC;IAAD,8BAAC;CAAA;AA1FmC;;;;;;;;;;;;;;;;;;;ACbO;AAEqB;AAGhE;IAEE,qCAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAGnD,CAAC;IAGD,6CAAO,GAAP,UAAQ,KAA6B;QAArC,iBAqBC;QAfC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAKtC,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,MAAM,CAAC;iBACxC,IAAI,CAAC,cAAI;gBACR,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;gBACjB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,EAAE,aAAG;gBACJ,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;;gBA3BmC,6EAAe;;IAFxC,2BAA2B;QADvC,gEAAU,EAAE;+EAGyB,6EAAe;OAFxC,2BAA2B,CAgCvC;IAAD,kCAAC;CAAA;AAhCuC","file":"actualizar-provincia-actualizar-provincia-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref=\\\"pais\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>Provincia</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content padding>\\n  \\n\\n    <form [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"onSubmit(validations_form.value)\\\">\\n        <ion-item>\\n            <ion-label>Seleccione un Pais</ion-label>\\n            <ion-select formControlName=\\\"pais\\\" >\\n              <ion-select-option *ngFor=\\\"let pais of paises\\\" ></ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Descripcion</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"descripcion\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-button class=\\\"submit-button\\\" expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Guardar</ion-button>\\n    </form>\\n    <ion-button class=\\\"delete-button\\\" expand=\\\"block\\\" color=\\\"danger\\\" (click)=\\\"delete()\\\">Eliminar</ion-button>\\n  \\n  </ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Routes, RouterModule} from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActualizarProvinciaPageRoutingModule } from './actualizar-provincia-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ActualizarProvinciaPage } from './actualizar-provincia.page';\nimport { ActualizarProvinciaResolver } from './actualizar-provincia.resolver';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActualizarProvinciaPage,\n    resolve: {\n      data: ActualizarProvinciaResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ActualizarProvinciaPage],\n  providers:[ActualizarProvinciaResolver]\n})\nexport class ActualizarProvinciaPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjdHVhbGl6YXItcHJvdmluY2lhL2FjdHVhbGl6YXItcHJvdmluY2lhLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from 'src/services/firebase.service';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { LoadingController, ToastController, AlertController } from '@ionic/angular';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-actualizar-provincia',\n  templateUrl: './actualizar-provincia.page.html',\n  styleUrls: ['./actualizar-provincia.page.scss'],\n})\nexport class ActualizarProvinciaPage implements OnInit {\n  validations_form: FormGroup;\n  item: any;\n  paises: Array<any>;\n  load: boolean = false;\n\n  constructor(\n    public toastCtrl: ToastController,\n    public loadingCtrl: LoadingController,\n    private formBuilder: FormBuilder,\n    private firebaseService: FirebaseService,\n    private webview: WebView,\n    private alertCtrl: AlertController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public afs: AngularFirestore,\n  ) { }\n\n  ngOnInit() {\n    this.getData();\n    \n  }\n\n  getData() {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n\n      if (data) {\n        this.item = data;\n\n\n      }\n    })\n    this.validations_form = this.formBuilder.group({\n      pais: new FormControl(this.item.pais, Validators.required),\n      descripcion: new FormControl(this.item.descripcion, Validators.required)\n    });\n  }\n\n\n\n\n\n  onSubmit(value) {\n    let data = {\n\n      descripcion: value.descripcion,\n\n    }\n    this.firebaseService.actualizarProvincia(this.item.id, data)\n      .then(\n        res => {\n          this.router.navigate([\"/provincia\"]);\n        }\n      )\n  }\n\n  async delete() {\n    const alert = await this.alertCtrl.create({\n      header: 'Confirmar',\n      message: 'Quieres borrar el registro ' + this.item.descripcion + '?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => { }\n        },\n        {\n          text: 'Si',\n          handler: () => {\n            this.firebaseService.eliminarProvincia(this.item.id)\n              .then(\n                res => {\n                  this.router.navigate([\"/provincia\"]);\n                },\n                err => console.log(err)\n              )\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n\n  async presentLoading(loading) {\n    return await loading.present();\n  }\n\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, ActivatedRoute } from \"@angular/router\";\nimport { FirebaseService } from 'src/services/firebase.service';\n\n@Injectable()\nexport class ActualizarProvinciaResolver implements Resolve<any> {\n\n  constructor(public firebaseService: FirebaseService,) { \n\n\n  }\n\n\n  resolve(route: ActivatedRouteSnapshot) {\n   \n\n   \n      \n\n    return new Promise((resolve, reject) => {\n      let itemId = route.paramMap.get('id');\n\n    \n   \n\n      this.firebaseService.getProvincia(itemId)\n      .then(data => {\n        data.id = itemId;\n        resolve(data);\n      }, err => {\n        reject(err);\n      })\n     \n    })\n  }\n\n\n}"],"sourceRoot":""}